$(function() {

	// searchable
	$("select").searchable({
		maxListSize: 100,						// if list size are less than maxListSize, show them all
		maxMultiMatch: 50,						// how many matching entries should be displayed
		exactMatch: false,						// Exact matching on search
		wildcards: true,						// Support for wildcard characters (*, ?)
		ignoreCase: true,						// Ignore case sensitivity
		latency: 200,							// how many millis to wait until starting search
		warnMultiMatch: 'top {0} matches ...',	// string to append to a list of entries cut short by maxMultiMatch 
		warnNoMatch: 'no matches ...',			// string to show in the list when no entries match
		zIndex: 'auto'							// zIndex for elements generated by this plugin
   	});

	// alphabet search
	$('.alphabet').html(getHTMLAlphabet());

	// simple and advanced search toggle
	$("#advanced_search").hide();
	$("#simple_search_click").hide();
	
	if (getParameterByName("advanced_open") == 'true') {
		$("#advanced_search").show();
		$("#simple_search").hide();
		$("#simple_search_click").show();
		$("#advanced_search_click").hide();
		$("#advanced_open").val('true');
	}

	$("#advanced_search_click").click(function(){
		$("#advanced_search").show();
		$('#simple_search').hide();
		$("#simple_search_click").show();
		$("#advanced_search_click").hide();
		$("#advanced_open").val('true');
	});
	$("#simple_search_click").click(function(){
		$("#advanced_search").hide();
		$('#simple_search').show();
		$("#advanced_search_click").show();
		$("#simple_search_click").hide();
		$("#advanced_open").val('false');
	});

	// Portretinfo
	$('.portretinfo_click').click(function() {
		$("#portretinfo").show();
		$("#current_tab").val('portretinfo');
	});

	$("#portretinfo_close").click(function() {
		$("#portretinfo").hide();
		$("#current_tab").val('afbeeldingen');
	});

	showTab = function(tab) {
		$("#current_tab").val(tab);		
		for (i = 0; i < tabs.length; i++) {
			if (tabs[i] == tab) {
				$("#" + tabs[i] + "").show();	
				$("#" + tabs[i] + "_click").css("font-weight","bold");
				$("#" + tabs[i] + "_click").css("background","#dc002d");
				$("#" + tabs[i] + "_click").css("color","#fff");
			} else {
				$("#" + tabs[i] + "").hide();	
				$("#" + tabs[i] + "_click").css("font-weight","normal");
				$("#" + tabs[i] + "_click").css("background","#fff");
				$("#" + tabs[i] + "_click").css("color","#000");
			}
		}				
	};
	

	// admin edit screen
	var tabs = ["algemeen","promoties","benoemingen","rector","dienstverband","literatuur","afbeeldingen","overige"];

	html = '';
	for (i = 0; i < tabs.length; i++) {
		html = html + '<div id="' + tabs[i] + '_click" onclick="javascript:showTab(\'' + tabs[i] + '\');">' + tabs[i] + '</div>';
	} 
	$('#tabs').html(html);
	
	$("#algemeen_click").css("font-weight","bold");
	$("#algemeen_click").css("background","#dc002d");
	$("#algemeen_click").css("color","#fff");

	// get anchor value for tabs
	var identifier = window.location.hash;

	if (identifier == '#portretinfo') {
		$("#afbeeldingen_click").click();
		$("#current_tab").val('portretinfo');
		$("#portretinfo").show();
	} else {
		$(identifier + "_click").click();
	}	

	// image slider for hoogleraar photos
	$('.bxslider').bxSlider({
	  	infiniteLoop: false,
		hideControlOnEnd: true,
	 	slideWidth: 300,
		minSlides: 3,
    	maxSlides:  5,
	 	slideMargin: 10
	});

	// datefields
	$( ".dateField" ).datepicker({
      changeMonth: true,
      changeYear: true,
	  dateFormat: 'yy-mm-dd'
    });

$( "#datepicker" ).datepicker( "option", "dateFormat", $( this ).val() );

	// date slider
	var date_from = "";
	var date_to = "";
	getParameterByName("date_from") == "" ? date_from = "1614-01-01" : date_from = getParameterByName("date_from");
	getParameterByName("date_to") == "" ? date_to = new Date() : date_to = getParameterByName("date_to");

	var dateSlider = document.getElementById('slider');

	noUiSlider.create(dateSlider, {
		// Create two timestamps to define a range.
		range: {
		    min: timestamp('1614'),
		    max: timestamp(new Date())
		},

		connect: true,

		// Steps of one week
		step: 7 * 24 * 60 * 60 * 1000,

		// Two more timestamps indicate the handle starting positions.
		start: [ timestamp(date_from), timestamp(date_to) ],

		// No decimals
		format: wNumb({
			decimals: 0
		})
	});

	var dateValues = [
		document.getElementById('date_from_label'),
		document.getElementById('date_to_label')
	];

	dateSlider.noUiSlider.on('update', function( values, handle ) {
		dateValues[handle].innerHTML = formatDate(new Date(+values[handle]));
		$('#date_from').val($('#date_from_label').text());
		$('#date_to').val($('#date_to_label').text());
		$('#date_from_display').text(getYearFromDate($('#date_from_label').text()));
		$('#date_to_display').text(getYearFromDate($('#date_to_label').text()));
	});
});

duplicateHtml = function(dup,after) {
	$(dup).clone().find("input:text").val("").end()
                      .insertAfter(after);
};

function genCharArray(charA, charZ) {
	var a = [], i = charA.charCodeAt(0), j = charZ.charCodeAt(0);
	for (; i <= j; ++i) {
	    a.push(String.fromCharCode(i));
	}
	return a;
}

function getHTMLAlphabet()
{
	var alphabet = genCharArray('A', 'Z');
	var html = '';
	alphabet.forEach(function(entry) {
		html = html.concat('<div class="letter"><a href="/search?hoogleraar_achternaam=' + entry + '*&hoogleraar_voornamen=&andor=AND">' + entry + '</a></div>');
	});
	return html;
}

// Create a string representation of the date.
function formatDate ( date ) {
    return date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
}

function getYearFromDate ( date ) {
    return new Date(date).getFullYear();
}

// Create a new date from a string, return as a timestamp.
function timestamp(str){
    return new Date(str).getTime();   
}

function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}


